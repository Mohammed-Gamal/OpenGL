
#include <windows.h>
#include <GL/gl.h>
#include <glut.h>



float angle=0.10;

void drawcube(void)
{
  glClear(GL_COLOR_BUFFER_BIT);
  glColor3f(1.0, 1.0, 1.0);
 
  glMatrixMode(GL_MODELVIEW);
  //glLoadIdentity();
  

  glRotatef(angle, 0.0, 1.0, 0.0);
 
  glutWireCube(12.0);
  
    /*glPushMatrix();
	glTranslatef(-6,-6,-6);
	glutWireSphere(1.0,50.0,50.0);
	glPopMatrix();

	glPushMatrix();
	glTranslatef(-6,6,-6);
	glutWireSphere(1.0,50.0,50.0);
         glColor3f(1.0,0.0,0.0);
	glutSolidCone(3.5,10.0,50.0,50.0);
	glPopMatrix();
	*/
  glFlush();
  glutSwapBuffers();
}

void keyboard(unsigned char key, int x, int y)
{
  switch (key)
  {
    case 0x1B:
    case 'q':
    case 'Q':
      exit(0);
    break;
  }
}

void mouse(int btn, int state, int x, int y)
{
  if (state == GLUT_DOWN)
  {
    if (btn == GLUT_LEFT_BUTTON)
      angle = angle + 0.01f;
    else if (btn == GLUT_RIGHT_BUTTON)
      angle = angle - 1.0f;
    else
      angle = 0.0f;
  }
}
void Special_Keys(int key,int x,int y)
{
	switch(key)
	{
		case GLUT_KEY_LEFT:
			angle=angle+1.0;
			break;
		case GLUT_KEY_RIGHT:
			angle=angle-1.0;
			break;
	}
}
void init ()
{

	  glClearColor(0.0, 0.0, 0.0, 0.0);
	glMatrixMode(GL_PROJECTION);
  glLoadIdentity();
  glOrtho(-30.0, 30.0, -30.0, 30.0, -30.0, 30.0);
}
int main(int argc, char **argv)
{
  glutInit(&argc, argv);
  glutInitWindowSize(500, 500);
  glutInitDisplayMode(GLUT_RGB | GLUT_DOUBLE);
  glutCreateWindow("Glut rotate");
  glutMouseFunc(mouse);
  glutKeyboardFunc(keyboard);
  glutSpecialFunc(Special_Keys);
  glutDisplayFunc(drawcube);
  glutIdleFunc(drawcube); 

  
   init();
   glRotatef(30.0, 1.0, 0.0, 0.0); 
   glutMainLoop();
  return(0);
}
