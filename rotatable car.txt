#include<windows.h>
#include<gl/gl.h>
#include<gl/glut.h>
////////////////////////
float angle=1.0;
float dist=1.0;
void drawcube(void)
{
     glClear(GL_COLOR_BUFFER_BIT);
	 glColor3f(1.0,1.0,1.0);
	 glMatrixMode(GL_MODELVIEW);
     glLoadIdentity();
	 glTranslatef(dist,0.0,0.0);
	 //glLoadIdentity();
	 glRotatef(angle, 0,1,0);
	 glPushMatrix();
	 glScalef(4.5,1.0,2.5);
	 glutWireCube(10.0);
	 ////////////////////////
	 glTranslatef(0.0,10.0,0.0);
	 glScalef(1.5,1.0,1.5);
	 glutWireCube(5.0);
	 ///////////////////////
	 glTranslatef(-3.0,-15.0,4.0);
	 glRotatef(90.0,0.0,1.0,0.0);
	 glutWireTorus(1.0,0.8,50.0,50.0);
	 ////////////////////////////////
	 glTranslatef(0.5,-1.0,6.0);
	 glRotatef(180.0,0.0,1.0,0.0);
	 glutWireTorus(1.0,0.8,50.0,50.0);
	 ////////////////////////////////
	 glTranslatef(-7.0,3.0,6.0);
	 glRotatef(180.0,0.0,1.0,0.0);
	 glutWireTorus(1.0,0.8,50.0,50.0);
	 ////////////////////////////////
	 glTranslatef(1.0,-1.0,6.0);
	 glRotatef(180.0,0.0,1.0,0.0);
	 glutWireTorus(1.0,0.8,50.0,50.0);
	 ////////////////////////////////
	 glPopMatrix();
	 glFlush();
	 glutSwapBuffers();
}
//////////////////////////////////////////
void Special_Keys(int key,int x,int y)
{
	switch(key)
	{
		case GLUT_KEY_LEFT:
			angle=angle+1.0;break;
		case GLUT_KEY_RIGHT:
			angle=angle-1.0;break;
		case GLUT_KEY_UP:
			dist=dist+1.0; break;
		case GLUT_KEY_DOWN:
			dist=dist-1.0; break;

    }
}
void mouse(int btn,int state,int x,int y)
{
	if(state==GLUT_DOWN)
	{
		if(btn==GLUT_RIGHT_BUTTON)
			angle=angle+1.0;
	    if(btn==GLUT_LEFT_BUTTON)
			angle=angle-1.0;
		else
			angle=0.0;
	}
}
int main(int argc,char** argv)
{
      glutInit(& argc,argv);
	  glutInitWindowSize(500,500);
	  glutInitDisplayMode(GLUT_RGB|GLUT_DOUBLE);
	  glutCreateWindow("Rotare cube");
	  glutSpecialFunc(Special_Keys);
	  glutMouseFunc(mouse);
	  glutDisplayFunc(drawcube);
	  glutIdleFunc(drawcube);
	  glMatrixMode(GL_PROJECTION);
	  glLoadIdentity();
	  glOrtho(-30.0,30.0,-30.0,30.0,-30.0,30.0);
	  glRotatef(30,1,0,0);
	  glMatrixMode(GL_MODELVIEW);
	  glClearColor(0.0,0.0,0,0.0);
	  glutMainLoop();
	  return(0);
}
